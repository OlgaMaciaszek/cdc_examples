buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
		classpath 'io.codearte.accurest:accurest-gradle-plugin:1.1.0-M7'
	}
}


ext {
	spockVersion = '1.0-groovy-2.4'
	restAssuredVersion = '2.4.1'

	accurestStubsBaseDirectory = 'src/test/resources/stubs'
}

subprojects {
	apply plugin: 'groovy'
	apply plugin: 'maven-publish'


	repositories {
		mavenCentral()
		mavenLocal()
		jcenter()
	}

	dependencies {
		compile("org.codehaus.groovy:groovy-all:2.4.5")
		testCompile("org.spockframework:spock-core:$spockVersion") {
			exclude(group: 'org.codehaus.groovy')
		}
		testCompile("junit:junit:4.12")
		testCompile('com.github.tomakehurst:wiremock:1.58') {
			exclude group: 'org.mortbay.jetty', module: 'servlet-api'
		}
	}

	task allDeps(type: DependencyReportTask) {}

}

configure(project(':fraudDetectionService')) {
	apply plugin: 'spring-boot'
	apply plugin: 'accurest'

	ext {
		wireMockStubsOutputDirRoot = file("${project.buildDir}/production/${project.name}-stubs/")
		wireMockStubsOutputDir = file(new File(wireMockStubsOutputDirRoot, 'mappings/'))
	}

	accurest {
		targetFramework = 'Spock'
		testMode = 'MockMvc'
		baseClassForTests = 'com.toomuchcoding.MvcSpec'
		contractsDslDir = file("${project.projectDir.absolutePath}/mappings/")
		generatedTestSourcesDir = file("${project.buildDir}/generated-sources/")
		stubsOutputDir = wireMockStubsOutputDir
	}

	group = 'com.toomuchcoding'
	version = '0.0.1-SNAPSHOT'

	dependencies {
		compile("org.springframework.boot:spring-boot-starter-web")
		compile("org.springframework.boot:spring-boot-starter-jetty")
		compile("org.springframework.boot:spring-boot-starter-actuator")
		compile('com.ofg:micro-infra-spring-boot-starter:0.9.1')

		testRuntime("org.spockframework:spock-spring:$spockVersion") {
			exclude group: 'org.codehaus.groovy'
		}
		testCompile "org.springframework:spring-test"
		testCompile("com.jayway.restassured:rest-assured:$restAssuredVersion") {
			exclude group: 'org.codehaus.groovy'
		}
		testCompile("com.jayway.restassured:spring-mock-mvc:$restAssuredVersion") {
			exclude group: 'org.codehaus.groovy'
		}
	}
}

configure(project(':fraudDetectionService')) {
	test.dependsOn('generateWireMockClientStubs')

	task stubsJar(type: Jar, dependsOn: 'generateWireMockClientStubs') {
		baseName = "${project.name}"
		classifier = 'stubs'
		from wireMockStubsOutputDirRoot
	}

	artifacts {
		archives stubsJar
	}

	publishing {
		publications {
			stubs(MavenPublication) {
				artifactId "${project.name}"

				artifact stubsJar

			}
		}
	}
}

